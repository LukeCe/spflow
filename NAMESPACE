# Generated by roxygen2: do not edit by hand

export("%$%")
export("%>%")
export("dat<-")
export("id<-")
export("neighborhood<-")
export("variable_names<-")
export(add_details)
export(count)
export(dat)
export(drop_columns)
export(expand_flow_neighborhood)
export(id)
export(neighborhood)
export(neighborhoods)
export(network_nodes)
export(network_pairs)
export(pair_merge)
export(results)
export(sp_multi_network)
export(sp_network_nodes)
export(sp_network_pair)
export(spflow)
export(spflow_control)
export(spflow_model)
export(spflow_sim)
export(varcov)
export(variable_names)
exportClasses(sp_multi_network)
exportClasses(sp_network_nodes)
exportClasses(sp_network_pair)
exportClasses(spflow_model_mcmc)
exportClasses(spflow_model_mle)
exportClasses(spflow_model_s2sls)
exportMethods("dat<-")
exportMethods("id<-")
exportMethods("neighborhood<-")
exportMethods("variable_names<-")
exportMethods(coef)
exportMethods(count)
exportMethods(dat)
exportMethods(fitted)
exportMethods(id)
exportMethods(logLik)
exportMethods(neighborhood)
exportMethods(neighborhoods)
exportMethods(network_nodes)
exportMethods(network_pairs)
exportMethods(nobs)
exportMethods(pair_merge)
exportMethods(predict)
exportMethods(resid)
exportMethods(set_columns)
exportMethods(varcov)
exportMethods(variable_names)
import(Matrix)
importClassesFrom(Matrix,Matrix)
importFrom(data.table,":=")
importFrom(magrittr,"%$%")
importFrom(magrittr,"%>%")
importFrom(methods,"slot<-")
importFrom(methods,as)
importFrom(methods,canCoerce)
importFrom(methods,is)
importFrom(methods,isGeneric)
importFrom(methods,new)
importFrom(methods,setClassUnion)
importFrom(methods,setGeneric)
importFrom(methods,slot)
importFrom(methods,validObject)
importFrom(stats,as.formula)
importFrom(stats,contrasts)
importFrom(stats,formula)
importFrom(stats,model.matrix)
importFrom(stats,optim)
importFrom(stats,predict)
importFrom(stats,pt)
importFrom(stats,quantile)
importFrom(stats,reformulate)
importFrom(stats,rgamma)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(stats,terms)
importFrom(stats,terms.formula)
