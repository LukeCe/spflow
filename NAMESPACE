# Generated by roxygen2: do not edit by hand

export("dat<-")
export("id<-")
export("neighborhood<-")
export(dat)
export(id)
export(mcmc_results)
export(neighborhood)
export(nnodes)
export(npairs)
export(pair_merge)
export(pull_member)
export(results)
export(sp_multi_network)
export(sp_network_nodes)
export(sp_network_pair)
export(spflow)
export(spflow_control)
export(varcov)
exportClasses(sp_multi_network)
exportClasses(sp_network_nodes)
exportClasses(sp_network_pair)
exportClasses(spflow_model_mcmc)
exportClasses(spflow_model_mle)
exportClasses(spflow_model_ols)
exportClasses(spflow_model_s2sls)
exportMethods("id<-")
exportMethods(coef)
exportMethods(dat)
exportMethods(fitted)
exportMethods(id)
exportMethods(logLik)
exportMethods(neighborhood)
exportMethods(nnodes)
exportMethods(nobs)
exportMethods(npairs)
exportMethods(pair_merge)
exportMethods(predict)
exportMethods(pull_member)
exportMethods(resid)
exportMethods(results)
exportMethods(sd_error)
importClassesFrom(Matrix,Matrix)
importFrom(Matrix,Diagonal)
importFrom(Matrix,Matrix)
importFrom(Matrix,bdiag)
importFrom(Matrix,colSums)
importFrom(Matrix,crossprod)
importFrom(Matrix,diag)
importFrom(Matrix,forceSymmetric)
importFrom(Matrix,nnzero)
importFrom(Matrix,rowSums)
importFrom(Matrix,solve)
importFrom(Matrix,sparseMatrix)
importFrom(Matrix,t)
importFrom(Matrix,tcrossprod)
importFrom(Rdpack,reprompt)
importFrom(coda,as.mcmc)
importFrom(methods,"slot<-")
importFrom(methods,as)
importFrom(methods,canCoerce)
importFrom(methods,is)
importFrom(methods,isGeneric)
importFrom(methods,new)
importFrom(methods,setClassUnion)
importFrom(methods,setGeneric)
importFrom(methods,slot)
importFrom(methods,validObject)
importFrom(stats,as.formula)
importFrom(stats,contrasts)
importFrom(stats,cor)
importFrom(stats,formula)
importFrom(stats,model.matrix)
importFrom(stats,optim)
importFrom(stats,predict)
importFrom(stats,pt)
importFrom(stats,quantile)
importFrom(stats,reformulate)
importFrom(stats,rgamma)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(stats,terms)
importFrom(stats,terms.formula)
importFrom(utils,combn)
importFrom(utils,head)
importFrom(utils,tail)
